.cat-btn {
  /* padding removed */
  padding: 0;
  border-radius: 8px;
  border: 1px solid rgba(0,0,0,0.06);
  background: linear-gradient(180deg,#fff,#f7f7f7);
  cursor: pointer;
  font-weight: 700;
  /* text color for shop category buttons - controlled via --panel-bg-shop-btn-color */
  color: var(--panel-bg-shop-btn-color, #111);
}
.info-panel {
  /* alignment/gap/padding removed; neutral container */
  max-width: none;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* use the parent panel variable so the toolbar 'Parent panel' control affects this container
     This allows the UI element shown in devtools as `section.info-panel.panel` to reflect the color */
  background: var(--panel-bg, linear-gradient(180deg, #fff, #fbfbfb));
  border-radius: 12px;
  box-shadow: 0 6px 24px rgba(0,0,0,0.06);

  position: static;
  z-index: auto;
  /* internal container uses small rem padding; global viewport edge padding
    is applied to the outer #root element via App.css */
  padding-left: 0.25rem;
  padding-right: 0.25rem;

}
.info-panel-inner {
  text-align: left;
}
.info-panel h2 {
  margin-top: 0;
}
.info-panel p {
  line-height: 1.6;
  margin-bottom: 1rem;
}

.info-section {
  /* neutral section spacing */
  scroll-margin-top: 0;
  padding: 0;
}

/* Match panels to the CardArc's inner canvas width so they visually align */
.panel {
  /* neutral panel layout */
  max-width: none;
  width: auto;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* use per-section CSS variable when available, fallback to default gradient */
  background: var(--panel-bg, linear-gradient(180deg, #fff, #fbfbfb));
  border-radius: 12px;
  box-shadow: 0 6px 24px rgba(0,0,0,0.06);
  /* panels include modest internal padding; viewport edge padding is global */
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

/* Keep the stage in normal flow and give panels a max-height so they don't push other elements
   Panels will scroll internally when their content exceeds the max height. */
.panel-stage {
  /* neutral stage spacing */
  min-height: 0;
  padding: 0;
}
.panel-scrollable {
  max-height: 360px;
  overflow: auto;
}

/* Visual separators between consecutive paragraphs (aspects) in About Us */
.panel#about-us p {
  margin: 0;
  padding: 0;
}
.panel#about-us p + p {
  border-top: 1px solid rgba(0,0,0,0.06);
}

@media (prefers-color-scheme: dark) {
  .panel#about-us p + p {
    border-top-color: rgba(255,255,255,0.04);
  }
}

/* Same subtle separators for Author panel */
.panel#author p {
  margin: 0;
  padding: 0;
}
.panel#author p + p {
  border-top: 1px solid rgba(0,0,0,0.06);
}

@media (prefers-color-scheme: dark) {
  .panel#author p + p {
    border-top-color: rgba(255,255,255,0.04);
  }
}

/* Same subtle separators for Services panel */
.panel#services p {
  margin: 0;
  padding: 0;
}

/* Per-section background variables (if set). These fall back to the general --panel-bg or default gradient. */
.panel#about-us { background: var(--panel-bg-about-us, var(--panel-bg, linear-gradient(180deg, #fff, #fbfbfb))); }
.panel#author { background: var(--panel-bg-author, var(--panel-bg, linear-gradient(180deg, #fff, #fbfbfb))); }
.panel#services { background: var(--panel-bg-services, var(--panel-bg, linear-gradient(180deg, #fff, #fbfbfb))); }
.panel#subscriptions { background: var(--panel-bg-subscriptions, var(--panel-bg, linear-gradient(180deg, #fff, #fbfbfb))); }
.panel#shop { background: var(--panel-bg-shop, var(--panel-bg, linear-gradient(180deg, #fff, #fbfbfb))); }
.panel#services p + p {
  border-top: 1px solid rgba(0,0,0,0.06);
}

@media (prefers-color-scheme: dark) {
  .panel#services p + p {
    border-top-color: rgba(255,255,255,0.04);
  }
}

/* Subscriptions: tier and item styling */
.subscription-tier {
  padding: 0;
  border-top: none;
}
.subscription-tier:first-of-type {
  border-top: none;
}
.tier-title {
  margin: 0;
  font-size: 1rem;
  font-weight: 700;
  text-decoration: none;
}
.tier-items {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}
.tier-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0;
  border-bottom: none;
}
.tier-row:last-child {
  border-bottom: none;
}
.tier-desc {
  flex: 1 1 auto;
  padding-right: 0;
}
.tier-desc strong {
  display: block;
  font-weight: 700;
}
.tier-yearly {
  font-size: 0.85rem;
  color: rgba(0,0,0,0.6);
}
.tier-value {
  flex: 0 0 auto;
}
.value-box {
  background: transparent;
  border: none;
  padding: 0;
  border-radius: 0;
  font-weight: 400;
  text-decoration: none;
}

@media (prefers-color-scheme: dark) {
  .subscription-tier {
    border-top-color: rgba(255,255,255,0.03);
  }
  .tier-row {
    border-bottom-color: rgba(255,255,255,0.02);
  }
  .value-box {
    background: linear-gradient(180deg, #1a1a1a, #111);
    color: #fff;
    border-color: rgba(255,255,255,0.04);
  }
  .tier-yearly {
    color: rgba(255,255,255,0.6);
  }
}

/* Shop carousels */
/* Shop panel uses the generic .panel rules; additional shop-specific rules follow. */

/* Per-category button backgrounds: allow toolbar to write --panel-bg-shop-cat-<name> vars */

/* Shop categories container: 2x2 grid with small gaps and optional border controlled via --panel-bg-shop-border */
.shop-categories {
  display: flex;
  gap: var(--shop-card-gap, 12px);
  padding: 0.5rem 0;
  border-radius: 0;
  border: none;
  justify-content: center;
  align-items: center;
}

.shop-categories button[data-cat="books"] { background: var(--panel-bg-shop-cat-books, linear-gradient(180deg,#fff,#f7f7f7)); }
.shop-categories button[data-cat="shirts"] { background: var(--panel-bg-shop-cat-shirts, linear-gradient(180deg,#fff,#f7f7f7)); }
.shop-categories button[data-cat="stickers"] { background: var(--panel-bg-shop-cat-stickers, linear-gradient(180deg,#fff,#f7f7f7)); }
.shop-categories button[data-cat="crafts"] { background: var(--panel-bg-shop-cat-crafts, linear-gradient(180deg,#fff,#f7f7f7)); }
/* give each category button an outline that can be controlled globally */
.shop-categories button.cat-btn {
  border: var(--panel-bg-shop-outline-width, 1px) solid var(--panel-bg-shop-btn-outline, rgba(0,0,0,0.06));
  /* reinforce text color here as well for specificity */
  color: var(--panel-bg-shop-btn-color, #111);
  /* use card aspect ratio from CardArc (width:height == 2.75:4.75) */
  aspect-ratio: 2.75 / 4.75;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 10px;
  min-width: 72px;
  width: clamp(72px, calc((100% - (var(--shop-card-gap,12px) * 3)) / 4), 220px);
  /* remove large padding; control size via width + aspect-ratio */
  /* modest internal padding; global viewport padding applied at #root */
  padding: 0.5rem;
  text-align: center;
  box-sizing: border-box;
  font-size: calc(0.95rem * (var(--shop-card-size-multiplier-percent, 100) / 100));
}

/* Carousel directional button colors */
.carousel-btn.left { color: var(--panel-bg-shop-dir-prev, #111); }
.carousel-btn.right { color: var(--panel-bg-shop-dir-next, #111); }

/* shop item link/button inside carousel */
.shop-link {
  color: var(--panel-bg-shop-btn-color, #111);
  text-decoration: none;
  font-weight: 700;
}

/* Background colors for carousel directional buttons (controlled via toolbar) */
.carousel-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  border-radius: 0;
  background: transparent;
  border: none;
}
.carousel-btn.left { background: var(--panel-bg-shop-dir-prev-bg, transparent); }
.carousel-btn.right { background: var(--panel-bg-shop-dir-next-bg, transparent); }
/* apply outline to carousel directional buttons using same shop outline color and width */
.carousel-btn.left, .carousel-btn.right {
  border: var(--panel-bg-shop-outline-width, 1px) solid var(--panel-bg-shop-btn-outline, rgba(0,0,0,0.06));
}

/* Make carousel wrapper visibly padded for testing */
.shop-carousel {
  padding: 0;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
}

/* Carousel track & item stacking for 3-up view */
.carousel-track {
  position: relative;
  width: 100%;
  height: var(--shop-card-h, 320px); /* constrain track to card height so info below is not covered */
  display: block;
  overflow: visible;
}
.carousel-item {
  position: absolute;
  top: 50%;
  left: 50%;
  transform-origin: center center;
  transition: transform 420ms ease, opacity 420ms ease, filter 420ms ease;
  will-change: transform, opacity;
  display: flex;
  align-items: center;
  justify-content: center;
}
.carousel-item.hidden { display: none; }

/* positioning based on --pos (-2 leftmost ... 0 center ... 2 rightmost) */
.carousel-item-pos--2 { transform: translateX(-250%) translateY(-50%) scale(0.75); opacity: 0.35; z-index: 10; filter: blur(1px) saturate(0.9); }
.carousel-item-pos--1 { transform: translateX(-150%) translateY(-50%) scale(0.92); opacity: 1; z-index: 20; filter: none; }
.carousel-item-pos-0  { transform: translateX(-50%) translateY(-50%) scale(1.06); opacity: 1; z-index: 30; filter: none; }
.carousel-item-pos-1  { transform: translateX(50%) translateY(-50%) scale(0.92); opacity: 1; z-index: 20; filter: none; }
.carousel-item-pos-2  { transform: translateX(150%) translateY(-50%) scale(0.75); opacity: 0.35; z-index: 10; filter: blur(1px) saturate(0.9); }

/* Ensure shop-card fills the carousel-item box */
.carousel-item .shop-card { width: var(--shop-card-w, 320px); height: var(--shop-card-h, auto); }

/* shop panel height: compute a relative height based on the computed card height
   --shop-panel-height-percent is a multiplier percentage (default 150%).
   The final --shop-panel-height is card height * percent/100 + meta area. */
:root {
  --shop-panel-meta-h: 56px;
  --shop-panel-height: calc(var(--shop-card-h, 200px) * (var(--shop-panel-height-percent, 150) / 100) + var(--shop-panel-meta-h));
}

.shop-carousel-wrap {
  height: var(--shop-panel-height);
  min-height: var(--shop-panel-height);
  box-sizing: border-box;
  overflow: hidden;
  display: flex;
  flex-direction: column; /* stack carousel and info vertically */
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

/* Shop card styles: match CardArc card aspect ratio and visual treatment */
.shop-card {
  /* Prefer pixel-perfect CardArc card size published by CardArc via computeCardLayout */
  width: var(--shop-card-w, min(380px, 70%));
  height: var(--shop-card-h, auto);
  aspect-ratio: 2.75 / 4.75; /* fallback aspect ratio */
  display: flex;
  flex-direction: column;
  background: var(--panel-bg-shop, linear-gradient(180deg, #fff, #f7f7f7));
  border-radius: 16px;
  box-shadow: 0 6px 24px rgba(0,0,0,0.06);
  overflow: hidden;
  box-sizing: border-box;
}
.shop-card-media {
  flex: 1 1 auto;
  min-height: 0;
  display: block;
  background: #f3f3f3;
}
.shop-card-media img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}
.item-title { font-weight: 700; }

/* New: separate item info block below the carousel card */
.shop-item-info {
  margin-top: 4.5rem;
  
  align-items: center;
  justify-content: center;
  gap: 12px;
}
.shop-item-info .item-title { font-weight: 700; }
.shop-item-info .shop-link { font-weight: 700; }

/* Make carousel nav buttons slightly overlay the card edges for better UX */
.carousel-btn.left, .carousel-btn.right {
  background: transparent;
  border: none;
  font-size: 1.25rem;
  padding: 6px 10px;
  cursor: pointer;
}
.carousel-btn.left { margin-right: -8px; }
.carousel-btn.right { margin-left: -8px; }

